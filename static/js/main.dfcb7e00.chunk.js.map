{"version":3,"sources":["components/shared/layout/Footer.tsx","components/shared/layout/Header.tsx","api/agent.ts","store/slices/userSlice.ts","components/shared/utilities/SmInputGroup.tsx","components/todo/UserForm.tsx","components/todo/UserTable.tsx","components/shared/layout/Main.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Footer","Header","Container","className","Row","Col","agent","users","getUsers","axios","get","fetchUsersByThunk","createAsyncThunk","a","response","data","userSlice","createSlice","name","initialState","error","reducers","addUser","state","action","push","payload","editUser","map","x","id","deleteUser","filter","extraReducers","builder","addCase","pending","fulfilled","concat","rejected","message","actions","SmInputGroup","label","rest","useField","field","meta","hasError","touched","InputGroup","hasValidation","Text","type","as","Form","Control","isInvalid","Feedback","UserForm","userToEdit","setUserToEdit","isEditMode","useState","isLoading","setIsLoading","validationSchema","Yup","firstName","max","required","lastName","age","setId","formInitialValues","dispatch","useDispatch","fetchUsers","err","console","log","initialValues","enableReinitialize","onSubmit","values","setSubmitting","resetForm","setTimeout","isSubmitting","xs","md","Button","variant","disabled","title","onClick","UserTable","todoArr","useSelector","Table","striped","bordered","responsive","hover","length","item","index","icon","faTrash","todoId","Swal","fire","text","showCancelButton","buttonsStyling","customClass","confirmButton","cancelButton","confirmButtonText","then","result","isConfirmed","showConfirmButton","faPencilAlt","Main","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfcb7e00.chunk.js","sourcesContent":["export const Footer = () => {\r\n  return <footer></footer>;\r\n};\r\n","import { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header>\r\n      <Container className=\"py-3\">\r\n        <Row>\r\n          <Col>\r\n            <div className=\"text-center\">\r\n              Welcome to my Todo App Implemented with React, Redux-toolkit,\r\n              Typescript, Scss and Bootstrap 5\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://60f3032c6d44f30017788866.mockapi.io/api\";\r\n\r\nconst agent = {\r\n  users: {\r\n    getUsers: () => {\r\n      return axios.get(`${baseUrl}/users`);\r\n    },\r\n  },\r\n};\r\nexport default agent;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../api/agent\";\r\nimport { IUser } from \"../../models\";\r\n\r\ninterface IInitialState {\r\n  users: IUser[];\r\n  error: string | undefined;\r\n}\r\n\r\nconst initialState: IInitialState = { users: [], error: \"\" };\r\n\r\nexport const fetchUsersByThunk = createAsyncThunk(\r\n  \"users/fetchUsers\",\r\n  async (): Promise<IUser[]> => {\r\n    const response = await agent.users.getUsers();\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    addUser: (state, action: PayloadAction<IUser>) => {\r\n      state.users.push(action.payload);\r\n    },\r\n    editUser: (state, { payload }: PayloadAction<IUser>) => {\r\n      state.users = state.users.map((x) => {\r\n        if (x.id === payload.id) {\r\n          return { ...payload };\r\n        } else {\r\n          return x;\r\n        }\r\n      });\r\n    },\r\n    deleteUser: (state, { payload }: PayloadAction<number>) => {\r\n      state.users = state.users.filter((x) => x.id !== payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsersByThunk.pending, (state, { payload }) => {})\r\n      .addCase(fetchUsersByThunk.fulfilled, (state, { payload }) => {\r\n        state.users = state.users.concat(payload);\r\n      })\r\n      .addCase(fetchUsersByThunk.rejected, (state, { error }) => {\r\n        state.error = error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addUser, deleteUser, editUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { Field, FieldHookConfig, useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { InputGroup, Form } from \"react-bootstrap\";\r\n\r\ntype PropsType = { label: string } & FieldHookConfig<{}>;\r\n\r\nexport const SmInputGroup: React.FC<PropsType> = ({ label, ...rest }) => {\r\n  const [field, meta] = useField<{}>(rest);\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <InputGroup hasValidation className=\"mb-3 mb-md-0\">\r\n      <InputGroup.Text>{label}</InputGroup.Text>\r\n      <Field type=\"text\" as={Form.Control} {...field} isInvalid={hasError} />\r\n      {hasError && (\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {meta.error}\r\n        </Form.Control.Feedback>\r\n      )}\r\n    </InputGroup>\r\n  );\r\n};\r\n","import { IUser } from \"../../models\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  addUser,\r\n  editUser,\r\n  fetchUsersByThunk,\r\n} from \"../../store/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SmInputGroup } from \"../shared/utilities/SmInputGroup\";\r\n\r\ninterface IProps {\r\n  userToEdit: IUser | null;\r\n  setUserToEdit: (user: IUser | null) => void;\r\n}\r\n\r\nconst UserForm: React.FC<IProps> = ({ userToEdit, setUserToEdit }) => {\r\n  const isEditMode = userToEdit === null ? false : true;\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less!\")\r\n      .required(\"Please enter your first name!\"),\r\n    lastName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less!\")\r\n      .required(\"Please enter your last name!\"),\r\n    age: Yup.number()\r\n      .max(99, \"Must be less than 99 years!\")\r\n      .required(\"Please enter your age!\"),\r\n  });\r\n  const [id, setId] = useState<number>(1);\r\n  let formInitialValues: IUser = {\r\n    id,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: \"\",\r\n  };\r\n  const dispatch = useDispatch();\r\n  const fetchUsers = () => {\r\n    try {\r\n      setIsLoading(true);\r\n      dispatch(fetchUsersByThunk());\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={!isEditMode ? formInitialValues : userToEdit!}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setTimeout(() => {\r\n          if (!isEditMode) {\r\n            const newId = id + 1;\r\n            setId(newId);\r\n            values = { ...values, id };\r\n            dispatch(addUser(values));\r\n          } else {\r\n            dispatch(editUser(values));\r\n            setUserToEdit(null);\r\n          }\r\n          resetForm();\r\n          setSubmitting(false);\r\n        }, 1000);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values }) => (\r\n        <Form className=\"mb-3\">\r\n          {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n          <Row>\r\n            <Col xs={12} md={4}>\r\n              <SmInputGroup name=\"firstName\" label=\"First Name\" type=\"text\" />\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <SmInputGroup name=\"lastName\" label=\"Last Name\" type=\"text\" />\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <SmInputGroup name=\"age\" label=\"Age\" type=\"text\" />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              <div className=\"d-flex flex-column flex-md-row justify-content-start\">\r\n                {!isEditMode ? (\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className=\" mb-3 mb-md-0 me-md-2\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                ) : (\r\n                  <div className=\"d-flex justify-content-space-around\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\" mb-3 mb-md-0 me-2 w-100\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      title=\"Cancel\"\r\n                      className=\" mb-3 mb-md-0 me-md-2 w-100\"\r\n                      onClick={() => {\r\n                        setUserToEdit(null);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  type=\"button\"\r\n                  onClick={fetchUsers}\r\n                  disabled={isLoading}\r\n                >\r\n                  Fetch Some Users\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { deleteUser } from \"../../store/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { IUser } from \"../../models\";\r\n\r\ninterface IProps {\r\n  setUserToEdit: (user: IUser) => void;\r\n}\r\n\r\nconst UserTable: React.FC<IProps> = ({ setUserToEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const todoArr = useSelector((state: RootState) => state.userSlice.users);\r\n\r\n  const handleDeleteUser = (todoId: number) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      buttonsStyling: false,\r\n      customClass: {\r\n        confirmButton: \"btn btn-danger\",\r\n        cancelButton: \"btn btn-outline-secondary ms-3\",\r\n      },\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(deleteUser(todoId));\r\n        Swal.fire({\r\n          title: \"Successfully Deleted\",\r\n          icon: \"success\",\r\n          showConfirmButton: true,\r\n          buttonsStyling: false,\r\n          customClass: {\r\n            confirmButton: \"btn btn-primary\",\r\n          },\r\n          confirmButtonText: \"Ok!\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Table\r\n        striped\r\n        bordered\r\n        responsive\r\n        hover\r\n        variant=\"dark\"\r\n        className=\"users-table\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">ID</th>\r\n            <th className=\"text-center\">First Name</th>\r\n            <th className=\"text-center\">Last Name</th>\r\n            <th className=\"text-center\">Age</th>\r\n            <th className=\"text-center\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {todoArr.length > 0 &&\r\n            todoArr.map((item, index) => (\r\n              <tr key={index}>\r\n                <td className=\"text-center\">{item.id}</td>\r\n                <td className=\"text-center\">{item.firstName}</td>\r\n                <td className=\"text-center\">{item.lastName}</td>\r\n                <td className=\"text-center\">{item.age}</td>\r\n                <td className=\"text-center\">\r\n                  <FontAwesomeIcon\r\n                    className=\"delete-icon\"\r\n                    icon={faTrash}\r\n                    title=\"Delete\"\r\n                    onClick={() => {\r\n                      handleDeleteUser(item.id);\r\n                    }}\r\n                  />\r\n                  <FontAwesomeIcon\r\n                    className=\"edit-icon ms-4\"\r\n                    icon={faPencilAlt}\r\n                    title=\"Edit\"\r\n                    onClick={() => {\r\n                      setUserToEdit(item);\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { IUser } from \"../../../models\";\r\nimport UserForm from \"../../todo/UserForm\";\r\nimport UserTable from \"../../todo/UserTable\";\r\n\r\nconst Main = () => {\r\n  const [userToEdit, setUserToEdit] = useState<IUser | null>(null);\r\n  return (\r\n    <main>\r\n      <Container className=\"pt-5\">\r\n        <Row>\r\n          <Col>\r\n            <UserForm userToEdit={userToEdit} setUserToEdit={setUserToEdit} />\r\n            <UserTable setUserToEdit={setUserToEdit} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Footer } from \"./components/shared/layout/Footer\";\nimport { Header } from \"./components/shared/layout/Header\";\nimport Main from \"./components/shared/layout/Main\";\nimport \"./resources/global.scss\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userSlice from \"./slices/userSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    userSlice,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}